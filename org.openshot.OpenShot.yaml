app-id: org.openshot.OpenShot
base: com.riverbankcomputing.PyQt.BaseApp
base-version: '5.15-23.08'
runtime: org.kde.Platform
runtime-version: '5.15-23.08'
sdk: org.kde.Sdk
command: openshot-qt
rename-icon: openshot-qt
rename-mime-icons:
  - openshot-qt-doc
finish-args:
  - --require-version=0.11.4 # fixes file saving
  - --share=ipc
  - --socket=x11
  - --device=dri
  - --share=network
  - --filesystem=host
  - --socket=pulseaudio
  - --talk-name=org.freedesktop.Flatpak
  - --env=QTWEBENGINEPROCESS_PATH=/app/bin/QtWebEngineProcess
sdk-extensions:
  - org.freedesktop.Sdk.Extension.rust-stable
build-options:
  append-path: /usr/lib/sdk/rust-stable/bin
cleanup:
  - /include
  - /lib/cmake
  - /lib/mkspecs
  - /lib/pkgconfig
  - /share/cmake
  - /share/man
  - /share/sip
  - '*.a'
  - '*.la'
cleanup-commands:
  - /app/cleanup-BaseApp.sh
modules:

  - python3-toml.json
  - python3-packaging.json

  - name: zeromq
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
    cleanup:
      - /bin
    sources:
      - type: archive
        url: https://github.com/zeromq/libzmq/releases/download/v4.3.5/zeromq-4.3.5.tar.gz
        sha256: 6653ef5910f17954861fe72332e68b03ca6e4d9c7160eb3a8de5a5a913bfab43

  - name: swig
    config-opts:
      - --without-alllang
      - --with-python=/usr/bin/python3
      - --without-boost
      - --without-pcre
    cleanup:
      - '*'
    sources:
      - type: archive
        url: https://downloads.sourceforge.net/project/swig/swig/swig-4.3.0/swig-4.3.0.tar.gz
        sha256: f7203ef796f61af986c70c05816236cbd0d31b7aa9631e5ab53020ab7804aa9e

  - name: cppzmq
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCPPZMQ_BUILD_TESTS=OFF
    sources:
      - type: git
        url: https://github.com/zeromq/cppzmq.git
        commit: c94c20743ed7d4aa37835a5c46567ab0790d4acc
        tag: v4.10.0

  - name: pyzmq
    buildsystem: simple
    build-commands:
      - python3 setup.py install --prefix=/app --root=/
    sources:
      - type: git
        url: https://github.com/zeromq/pyzmq.git
        commit: 8fb0f0f6e8fb7b0a0cfaf8d32d22960f70d3d4fa
        tag: v19.0.2

  - python3-requests.json

  - name: ImageMagick
    config-opts:
      - --disable-static
    cleanup:
      - /bin
      - /share/doc
    sources:
      - type: archive
        url: https://download.imagemagick.org/archive/releases/ImageMagick-7.1.1-43.tar.xz
        sha256: fa79401342b409b9b7f7d3146bd6595787373811e72be1669c39b58d1489da4f

  - name: resvg
    buildsystem: simple
    build-commands:
      - cargo build --verbose --release --frozen --manifest-path capi/Cargo.toml --features "qt-backend"
      - install -Dm644 target/release/libresvg.so -t /app/lib
      - install -Dm644 capi/include/*.h -t /app/include/resvg
    sources:
      - type: archive
        url: https://github.com/RazrFalcon/resvg/releases/download/v0.9.1/resvg-0.9.1.tar.xz
        sha256: dd00841f0928c7106a6ee1ca761d7a61747d26a27038008a3568398136aa5b16
      - type: shell
        commands:
          - sed -i 's|/usr/local/share/fonts/|/run/host/fonts/|' usvg/src/fontdb.rs
      - type: patch
        path: patches/resvg-qt515.patch

  - name: 'x264'
    config-opts:
      - --disable-cli
      - --enable-shared
    sources:
      - type: git
        url: https://code.videolan.org/videolan/x264.git
        commit: 373697b467f7cd0af88f1e9e32d4f10540df4687

  - name: nv-codec-headers
    no-autogen: true
    make-install-args:
      - PREFIX=/app
    cleanup:
      - '*'
    sources:
      - type: git
        url: https://git.videolan.org/git/ffmpeg/nv-codec-headers.git
        commit: c69278340ab1d5559c7d7bf0edf615dc33ddbba7
        tag: n12.2.72.0

  - name: ffmpeg
    config-opts:
      - --enable-gpl
      - --disable-static
      - --enable-shared
      - --disable-doc
      - --disable-programs
      - --enable-libfontconfig
      - --enable-libfreetype
      - --enable-libopus
      - --enable-libvorbis
      - --enable-libvpx
      - --enable-avresample
      - --enable-libx264
    cleanup:
      - /share/ffmpeg
    sources:
      - type: archive
        url: https://www.ffmpeg.org/releases/ffmpeg-4.2.4.tar.xz
        sha256: 0d5da81feba073ee78e0f18e0966bcaf91464ae75e18e9a0135186249e3d2a0b
      - type: patch
        path: patches/ffmpeg-as-fix.patch

  - name: libopenshot-audio
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    cleanup:
      - /bin
      - /share/doc
    sources:
      - type: archive
        url: https://github.com/OpenShot/libopenshot-audio/archive/v0.4.0.tar.gz
        sha256: 1abdedf9c8686c972c42225a283f518ed2ade445c2e454996b6709d8cc8d1704

  - name: babl
    buildsystem: meson
    config-opts:
      - -Denable-gir=false
      - -Dwith-docs=false
    sources:
      - type: archive
        url: https://download.gimp.org/pub/babl/0.1/babl-0.1.110.tar.xz
        sha256: bf47be7540d6275389f66431ef03064df5376315e243d0bab448c6aa713f5743

  # Required by libopenshot when building with opencv.
  - name: protobuf
    buildsystem: autotools
    sources:
      - type: git
        url: https://github.com/protocolbuffers/protobuf/
        # This is the expected version.
        tag: v3.12.4
    cleanup:
      - /bin

  - name: opencv
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DBUILD_TESTING=OFF
      - -DOPENCV_GENERATE_PKGCONFIG=ON
    cleanup:
      - /bin
    sources:
      - type: archive
        url: https://github.com/opencv/opencv/archive/4.11.0.tar.gz
        sha256: 9a7c11f924eff5f8d8070e297b322ee68b9227e003fd600d4b8122198091665f
        x-checker-data:
          type: anitya
          project-id: 6615
          stable-only: true
          url-template: https://github.com/opencv/opencv/archive/$version.tar.gz
      - type: archive
        url: https://github.com/opencv/opencv_contrib/archive/4.11.0.tar.gz
        sha256: 2dfc5957201de2aa785064711125af6abb2e80a64e2dc246aca4119b19687041
        x-checker-data:
          type: anitya
          project-id: 6615
          stable-only: true
          url-template: https://github.com/opencv/opencv_contrib/archive/$version.tar.gz
  - name: libopenshot
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - -DENABLE_RUBY=0
    cleanup:
      - /share/doc
    sources:
      - type: archive
        url: https://github.com/OpenShot/libopenshot/archive/v0.4.0.tar.gz
        sha256: be0e760d81275543f7fbbf87863645748c3fe8aa8f4b5b771ff45a5d026bc9cc

  - name: openshot-qt
    buildsystem: simple
    build-commands:
      - find . -type f -exec sed -i 's/Bitstream Vera Sans/DejaVu Sans/g' {} +
      - python3 setup.py install --prefix=/app --root=/
      - install -D inkscape.sh /app/bin/inkscape
      - install -D blender.sh /app/bin/blender
    sources:
      - type: script
        dest-filename: inkscape.sh
        commands:
          - flatpak-spawn --host flatpak info org.inkscape.Inkscape >/dev/null 2>/dev/null &&
            exec flatpak-spawn --host flatpak run org.inkscape.Inkscape "$@" ||
            exec flatpak-spawn --host flatpak run --command=zenity $FLATPAK_ID --error --text="Inkscape not installed!"
      - type: script
        dest-filename: blender.sh
        commands:
          - INPUT_FILE="$(awk -F "=" '/app-path/ {print $2}' /.flatpak-info)${2:4}" &&
            exec flatpak-spawn --host
            flatpak run --filesystem=~/.local/share/flatpak --filesystem=/var/lib/flatpak org.blender.Blender -b ${INPUT_FILE} -P "$4"
      - type: archive
        url: https://github.com/OpenShot/openshot-qt/archive/v3.3.0.tar.gz
        sha256: f5471eec94d59830ea58351b93e69d4c56b42874d927fbd6482f83b9bb545d4f
      - type: patch
        path: patches/openshot-appdata.patch
